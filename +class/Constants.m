classdef (Abstract) Constants

    properties (Constant)
        %-----------------------------------------------------------------%
        appName       = 'SCH'
        appRelease    = 'R2024a'
        appVersion    = '0.56'

        windowSize    = [1244, 660]
        windowMinSize = [ 880, 660]
        
        xDecimals     = 5
        floatDiffTol  = 1e-5

        % uistyle
        configStyle1  = uistyle('BackgroundColor', [.96,.96,.96])                                                           % Search table "row striping"
        configStyle2  = uistyle('BackgroundColor', [.24 .47 .85], 'FontColor', 'white')                                     % Search table "primary column background"
        configStyle3  = uistyle('Icon', 'Edit_18x18White2.png', 'IconAlignment', 'rightmargin')                             % Search table "cell annotation icon - Type1"
        configStyle4  = uistyle('Icon', 'Edit_18x18Gray2.png',  'IconAlignment', 'rightmargin')                             % Search table "cell annotation icon - Type2"
        configStyle5  = uistyle('Icon', 'Lock1_18x18Gray.png', 'FontColor', [.65,.65,.65], 'IconAlignment', 'leftmargin')   % Config uitree (Search table)
        configStyle6  = uistyle('Icon', 'Warn_18.png',  'IconAlignment', 'rightmargin')                                     % Incomplete data (Report table)
        configStyle7  = uistyle('BackgroundColor', '#c80b0f', 'FontColor', 'white')                                          % Incomplete data (Report table)

        % app.cacheData
        cacheColumns              = {'Homologação', 'Solicitante | Fabricante', 'Modelo | Nome Comercial'}

        % app.annotationTable & app.listOfProducts
        annotationTableColumns    = {'ID', 'DataHora', 'Computador', 'Usuário', 'Homologação', 'Atributo', 'Valor', 'Situação'}
        listOfProductsColumns     = {'Homologação', 'Tipo', 'Fabricante', 'Modelo', 'RF?', 'Em uso?', 'Interferência?', 'Valor Unit. (R$)', ...
                                     'Qtd. uso/vendida', 'Qtd. estoque', 'Qtd. lacradas', 'Qtd. apreendidas', 'Qtd. retidas (RFB)', 'Situação', 'Infração', 'Informações adicionais'}

        % app.search_Table & app.report_Table (GUI)
        search_TableStaticColumns = {'Homologação', 'Tipo', 'Solicitante', 'CNPJ/CPF', 'Fabricante', 'Modelo', 'Nome Comercial', 'Situação'}
        search_TableColumnNames   = {'Data da Homologação', 'Homologação', 'Solicitante', 'CNPJ/CPF', 'Certificado de Conformidade Técnica',                ...
                                     'Data do Certificado de Conformidade Técnica', 'Data de Validade do Certificado', 'Código de Situação do Certificado', ...
                                     'Situação do Certificado', 'Código de Situação do Requerimento', 'Situação', 'Fabricante', 'Modelo', 'Nome Comercial', ...
                                     'Categoria do Produto', 'Tipo', 'IC_ANTENA', 'IC_ATIVO', 'País do Fabricante', 'CodUIT', 'CodISO'}
        search_TableColumnWidths  = {90, 110, 'auto', 110, 110, 90, 90, 55, 150, 55, 150, 'auto', 150, 150, 55, 300, 55, 55, 110, 55, 55}
        
        report_TableColumnNames   = {'Homologação', 'Tipo', 'Fabricante', 'Modelo', 'RF?', 'Em uso?', 'Interferência?', 'Valor Unit. (R$)', ...
                                     'Qtd. uso/vendida', 'Qtd. estoque', 'Qtd. lacradas', 'Qtd. apreendidas', 'Qtd. retidas (RFB)'}
        report_TableColumnWidths  = {110, 300, 'auto', 150, 'auto', 'auto', 'auto', 110, 110, 110, 110, 110, 110}
    end

    
    methods (Static = true)
        %-----------------------------------------------------------------%
        function fileName = DefaultFileName(userPath, Prefix, Issue)
            fileName = fullfile(userPath, sprintf('%s_%s', Prefix, datestr(now, 'yyyy.mm.dd_THH.MM.SS')));

            if Issue > 0
                fileName = sprintf('%s_%d', fileName, Issue);
            end
        end


        %-----------------------------------------------------------------%
        function d = english2portuguese()
            names  = ["AntennaHeight", ...
                      "Azimuth", ...
                      "Band", ...
                      "BitsPerSample", ...
                      "Count", ...
                      "DataPoints", ...
                      "Description", ...
                      "Distance", ...
                      "Elevation", ...
                      "Family", ...
                      "File", ...
                      "FileVersion", ...
                      "Frequency", ...
                      "gpsType", ...
                      "Height", ...
                      "Installation", ...
                      "IntegrationFactor", ...
                      "LevelUnit", ...
                      "Location", ...
                      "LocationSource", ...
                      "Memory", ...
                      "MetaData", ...
                      "Name", ...
                      "nData", ...
                      "nSweeps", ...
                      "Observation", ...
                      "ObservationSamples", ...
                      "ObservationTime", ...
                      "ObservationType", ...
                      "Polarization", ...
                      "Position", ...
                      "Proeminence", ...
                      "Receiver", ...
                      "Resolution", ...
                      "RevisitTime", ...
                      "RFMode", ...
                      "Service", ...
                      "Sync", ...
                      "Station", ...
                      "StepWidth", ...
                      "switchPort", ...
                      "Target", ...
                      "Task", ...
                      "taskType", ...
                      "Type", ...
                      "TraceIntegration", ...
                      "TraceMode", ...
                      "TrackingMode"];
            values = ["Altura da antena", ...
                      "Azimute", ...
                      "Banda", ...
                      "Codificação", ...
                      "Qtd. amostras", ...
                      "Pontos por varredura", ...
                      "Descrição", ...
                      "Distância", ...
                      "Elevação", ...
                      "Família", ...
                      "Arquivo", ...
                      "Arquivo", ...
                      "Frequência", ...
                      "GPS", ...
                      "Altura", ...
                      "Instalação", ...
                      "Integração", ...
                      "Unidade", ...
                      "Localidade", ...
                      "Fonte", ...
                      "Memória", ...
                      "Metadados", ...
                      "Nome", ...
                      "Qtd. fluxos", ...
                      "Qtd. varreduras", ...
                      "Observação", ...
                      "Amostras a coletar", ...
                      "Observação", ...
                      "Tipo de observação", ...
                      "Polarização", ...
                      "Posição", ...
                      "Proeminência", ...
                      "Receptor", ...
                      "Resolução", ...
                      "Tempo de revisita", ...
                      "Modo RF", ...
                      "Serviço", ...
                      "Sincronismo", ...
                      "Estação", ...
                      "Passo da varredura", ...
                      "Porta da matriz", ...
                      "Alvo", ...
                      "Tarefa", ...
                      "Tipo de tarefa", ...
                      "Tipo", ...
                      "Integração", ...
                      "Traço", ...
                      "Modo de apontamento"];
        
            d = dictionary(names, values);
        end


        %-----------------------------------------------------------------%
        function d = listOfProductsColumnNames()
            names  = [ "RF?", ...
                       "Qtd uso/vendida", ...
                       "Qtd estoque", ...
                       "Interferência?", ...
                       "Qtd lacradas", ...
                       "Qtd apreendidas", ...
                       "Qtd retidas (RFB)"];
            values = [ "Usa radiofrequência?", ...
                       "Qtd. unidades em uso/comercializadas", ...
                       "Qtd. unidades em estoque", ...
                       "Evidenciada interferência?", ...
                       "Qtd. unidades lacradas", ...
                       "Qtd. unidades apreendidas", ...
                       "Qtd. unidades retidas (RFB)"];
        
            d = dictionary(names, values);
        end
    end
end